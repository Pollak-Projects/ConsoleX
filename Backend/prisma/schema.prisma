generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  category_id      Int                @id @default(autoincrement())
  category_name    String             @db.VarChar(255)
  product_category product_category[]
}

model order {
  order_id    Int          @id @default(autoincrement())
  user_id     Int
  order_date  DateTime     @db.Date
  total_price Decimal      @db.Decimal(10, 2)
  status      String       @db.VarChar(50)
  user        user         @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "order_ibfk_1")
  order_item  order_item[]

  @@index([user_id], map: "user_id")
}

model order_item {
  order_item_id Int     @id @default(autoincrement())
  order_id      Int
  product_id    Int
  quantity      Int
  unit_price    Decimal @db.Decimal(10, 2)
  order         order   @relation(fields: [order_id], references: [order_id], onUpdate: Restrict, map: "order_item_ibfk_1")
  product       product @relation(fields: [product_id], references: [product_id], onUpdate: Restrict, map: "order_item_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model product {
  product_id       Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  description      String?            @db.Text
  price            Decimal            @db.Decimal(10, 2)
  stock_quantity   Int
  order_item       order_item[]
  product_category product_category[]
}

model product_category {
  product_id  Int
  category_id Int
  product     product  @relation(fields: [product_id], references: [product_id], onUpdate: Restrict, map: "product_category_ibfk_1")
  category    category @relation(fields: [category_id], references: [category_id], onUpdate: Restrict, map: "product_category_ibfk_2")

  @@id([product_id, category_id])
  @@index([category_id], map: "category_id")
}

model user {
  user_id  Int     @id @default(autoincrement())
  username String  @db.VarChar(255)
  email    String  @unique(map: "email") @db.VarChar(255)
  password String  @db.VarChar(255)
  address  String? @db.VarChar(255)
  order    order[]
}
